// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  role         String   // 'student' | 'tutor' | 'admin'
  courses      Course[] @relation("TutorCourses")
  transactions Transaction[] @relation("UserTransactions")
  tutorTx      Transaction[] @relation("TutorTransactions")
  createdAt    DateTime @default(now())
}

model Course {
  id          String   @id @default(uuid())
  title       String
  slug        String   @unique
  language    String
  price       Float    @default(0)
  published   Boolean  @default(false)
  description String?  
  thumb       String?  
  tutor       User     @relation("TutorCourses", fields: [tutorId], references: [id])
  tutorId     String
  lessons     Lesson[]
  createdAt   DateTime @default(now())
}

model Lesson {
  id         String  @id @default(uuid())
  course     Course  @relation(fields: [courseId], references: [id])
  courseId   String
  title      String
  duration   Int     @default(60)
  videoUrl   String?
  notesBase64 String?
  orderIndex Int     @default(0)
}

model Transaction {
  id        String   @id @default(uuid())
  user      User     @relation("UserTransactions", fields: [userId], references: [id])
  userId    String
  tutor     User?    @relation("TutorTransactions", fields: [tutorId], references: [id])
  tutorId   String?
  type      String   // 'Course' | 'Private Session'
  amount    Float
  currency  String   @default("USD")
  status    String   @default("completed")
  ref       String?
  date      DateTime @default(now())
}

model Rating {
  id        String   @id @default(uuid())
  tutorSlug String
  value     Int
  userId    String?
  createdAt DateTime @default(now())
}

model PrivateSession {
  id        String   @id @default(uuid())
  studentId String
  tutorId   String
  planName  String?
  sessions  Json?
  paid      Boolean  @default(false)
  status    String   @default("Pending")
  createdAt DateTime @default(now())
}

model Promotion {
  id        String   @id @default(uuid())
  courseId  String
  status    String   @default("Pending")
  createdAt DateTime @default(now())
}

model Quiz {
  id          String   @id @default(uuid())
  title       String
  description String?
  image       String?
  date        DateTime @default(now())
}

model ChatMessage {
  id        String   @id @default(uuid())
  sessionId String
  from      String
  name      String
  text      String
  date      DateTime @default(now())
}
